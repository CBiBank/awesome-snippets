{
  "Vue2.functional": {
    "prefix": "vue2-functional",
    "body": [
      "/*",
      "context具有以下属性：",
      "- data：传递给组件的整个数据对象 data.attrs data.on",
      "- props：提供所有 prop 的对象",
      "- children：VNode 子节点的数组",
      "- slots：一个函数，返回了包含所有插槽的对象",
      "- parent：对父组件的引用",
      "- listeners：(2.3.0+) 一个包含了所有父组件为当前组件注册的事件监听器的对象。这是 data.on 的一个别名。",
      "- injections：(2.3.0+) 如果使用了 inject 选项，则该对象包含了应当被注入的 property。",
      "- scopedSlots：(2.6.0+) 一个暴露传入的作用域插槽的对象。也以函数形式暴露普通插槽。",
      "",
      "*/",
      "Vue.component('my-component', {",
      "\tfunctional: true,",
      "\t// Props 是可选的 vue@2.3.0+",
      "\tprops: {},",
      "\t// 为了弥补缺少的实例，提供context作为上下文",
      "\trender: function (createElement, context) {",
      "\t\t// 可以使用render函数 或者 jsx语法",
      "\t}",
      "})",
      ""
    ],
    "description": "Code Snippets For Vue2.functional."
  },
  "Vue2.jsx": {
    "prefix": "vue2-jsx",
    "body": [
      "/*",
      "针对vue2兼容jsx 安装:",
      "\t- 如果是 `babel@7`，那么：pnpm add @vue/babel-preset-jsx @vue/babel-helper-vue-jsx-merge-props -D",
      "\t- 如果是 `babel@6`，那么：pnpm add babel-plugin-transform-vue-jsx -D",
      "",
      "在 `babel.config.js` 中配置：",
      "\t- presets: ['@vue/babel-preset-jsx']",
      "\t- 或者",
      "\t- \"plugins\": [\"transform-vue-jsx\"]",
      "*/",
      "const render = function (h) {",
      "\treturn (",
      "\t\t<div",
      "\t\t\t// normal attributes or prefix with on props.",
      "\t\t\tid=\"foo\"",
      "\t\t\tpropsOnCustomEvent={this.customEventHandler}",
      "\t\t\t// DOM properties are prefixed with `domProps`",
      "\t\t\tdomPropsInnerHTML=\"bar\"",
      "\t\t\t// event listeners are prefixed with `on` or `nativeOn`",
      "\t\t\tonClick={this.clickHandler}",
      "\t\t\tnativeOnClick={this.nativeClickHandler}",
      "\t\t\t// other special top-level properties",
      "\t\t\tclass={{ foo: true, bar: false }}",
      "\t\t\tstyle={{ color: 'red', fontSize: '14px' }}",
      "\t\t\tkey=\"key\"",
      "\t\t\tref=\"ref\"",
      "\t\t\t// assign the `ref` is used on elements/components with v-for",
      "\t\t\trefInFor",
      "\t\t\tslot=\"slot\">",
      "\t\t</div>",
      "\t)",
      "}",
      ""
    ],
    "description": "Code Snippets For Vue2.jsx."
  },
  "Vue2.render": {
    "prefix": "vue2-render",
    "body": [
      "const render = function (createElement) {",
      "\t// @returns {VNode}",
      "\treturn createElement(",
      "\t\t// {String | Object | Function}",
      "\t\t// 一个 HTML 标签名、组件选项对象，或者",
      "\t\t// resolve 了上述任何一种的一个 async 函数。必填项。",
      "\t\t'div',",
      "",
      "\t\t// {Object}",
      "\t\t// 一个与模板中 attribute 对应的数据对象。可选。",
      "\t\t{",
      "\t\t\t// Component props",
      "\t\t\tprops: {",
      "\t\t\t\tmsg: 'hi',",
      "\t\t\t\tonCustomEvent: this.customEventHandler",
      "\t\t\t},",
      "\t\t\t// normal HTML attributes",
      "\t\t\tattrs: {",
      "\t\t\t\tid: 'foo'",
      "\t\t\t},",
      "\t\t\t// DOM props",
      "\t\t\tdomProps: {",
      "\t\t\t\tinnerHTML: 'bar'",
      "\t\t\t},",
      "\t\t\t// Event handlers are nested under \"on\", though",
      "\t\t\t// modifiers such as in v-on:keyup.enter are not",
      "\t\t\t// supported. You'll have to manually check the",
      "\t\t\t// keyCode in the handler instead.",
      "\t\t\ton: {",
      "\t\t\t\tclick: this.clickHandler",
      "\t\t\t},",
      "\t\t\t// For components only. Allows you to listen to",
      "\t\t\t// native events, rather than events emitted from",
      "\t\t\t// the component using vm.$emit.",
      "\t\t\tnativeOn: {",
      "\t\t\t\tclick: this.nativeClickHandler",
      "\t\t\t},",
      "\t\t\t// class is a special module, same API as `v-bind:class`",
      "\t\t\tclass: {",
      "\t\t\t\tfoo: true,",
      "\t\t\t\tbar: false",
      "\t\t\t},",
      "\t\t\t// style is also same as `v-bind:style`",
      "\t\t\tstyle: {",
      "\t\t\t\tcolor: 'red',",
      "\t\t\t\tfontSize: '14px'",
      "\t\t\t},",
      "\t\t\t// other special top-level properties",
      "\t\t\tkey: 'key',",
      "\t\t\tref: 'ref',",
      "\t\t\t// assign the `ref` is used on elements/components with v-for",
      "\t\t\trefInFor: true,",
      "\t\t\tslot: 'slot'",
      "\t\t},",
      "",
      "\t\t// {String | Array}",
      "\t\t// 子级虚拟节点 (VNodes)，由 `createElement()` 构建而成，",
      "\t\t// 也可以使用字符串来生成“文本虚拟节点”。可选。",
      "\t\t[",
      "\t\t\t'Hello World',",
      "\t\t\tcreateElement('h1', '你好'),",
      "\t\t\tcreateElement(MyComponent, {",
      "\t\t\t\tprops: {",
      "\t\t\t\t\tsomeProp: 'foobar'",
      "\t\t\t\t}",
      "\t\t\t})",
      "\t\t]",
      "\t)",
      "}",
      ""
    ],
    "description": "Code Snippets For Vue2.render."
  },
  "Vue2": {
    "prefix": "vue2",
    "body": [
      "<template>",
      "\t<div></div>",
      "</template>",
      "",
      "<script>",
      "export default {",
      "\tdata () {",
      "\t\treturn {",
      "\t\t}",
      "\t},",
      "\tcomputed: {},",
      "\twatch: {},",
      "\tcreated () {},",
      "\tmounted () {},",
      "\tmethods: {",
      "\t}",
      "}",
      "</script>",
      "",
      "<style scoped lang=\"less\">",
      "</style>",
      ""
    ],
    "description": "Code Snippets For Vue2."
  },
  "Vue2.versions": {
    "prefix": "vue2-versions",
    "body": [
      "{",
      "\t'vue': '^2.7.16',",
      "\t'vue-router': '^3.6.5',",
      "\t'vue-server-renderer': '^2.7.16',",
      "\t'vuex': '^3.4.0',",
      "\t'vuex-router-sync': '^5.0.0'",
      "}",
      ""
    ],
    "description": "Code Snippets For Vue2.versions."
  }
}